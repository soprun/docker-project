version: "3.3"

#x-logging:
#  &default-logging
#  logging:
#    driver: ${LOGGING_DRIVER}
#    options:
#      max-size: ${LOGGING_OPTIONS_MAX_SIZE}
#      max-file: ${LOGGING_OPTIONS_MAX_FILE}

#x-php:
#  &default-php
#  volumes:
#    - ./:/app:rw,consistent
#    - ~/.composer/cache:/composer/cache:rw,cached
#  depends_on:
#    - postgres
#    - memcached
#    - redis
#    - rabbitmq

volumes:
  rabbitmq:
    driver: local
  postgres:
    driver: local
  composer:
    driver: local

#networks:
#  frontend-tier:
#    driver: bridge
#  backend-tier:
#    driver: bridge

# https://github.com/docker/compose/issues/4675
services:
  nginx:
    # image: soprun/sandbox-nginx:latest
    build:
      dockerfile: ./docker/php/Dockerfile
      context: .
    container_name: nginx
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443

  php:
    # image: soprun/sandbox-php:latest
    build:
      dockerfile: ./docker/php/Dockerfile
      context: .
    container_name: php
    privileged: true
    volumes:
      - ./:/app:rw,consistent
      - ~/.composer/cache:/composer/cache:rw,cached
    depends_on:
      - postgres
      - memcached
      - redis
      - rabbitmq

  ###
  ### Message bus
  rabbitmq:
    image: rabbitmq:3.8.5-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}

  ###
  ### PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      # - ./docker/postgres/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD

  ###
  ### KV Storage
  memcached:
    image: memcached:latest
    hostname: ${MEMCACHED_HOST}
    container_name: memcached

  redis:
    image: redis:latest
    hostname: ${REDIS_HOST}
    container_name: redis
