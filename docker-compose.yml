version: "3.8"

x-logging:
  &default_logging
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

x-php:
  &default_php
  # user: 1000:1000
  restart: unless-stopped
  environment:
    - POSTGRES_DB
    - POSTGRES_HOST
    - POSTGRES_PASSWORD
    - POSTGRES_PORT
    - POSTGRES_USERNAME
    - REDIS_DB
    - REDIS_HOST
    - REDIS_PORT
  depends_on:
    - postgres
  networks:
    - backend_tier
  volumes:
    - ./app:/app:rw,cached

volumes:
  # for persistence between restarts
  postgres_data: { }

networks:
  frontend_tier:
    driver: bridge
  backend_tier:
    driver: bridge

services:
  nginx:
    build:
      dockerfile: ./docker/nginx/Dockerfile
      context: .
    container_name: nginx
    <<: *default_logging
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"
    depends_on:
      - php
    networks:
      - frontend_tier
      - backend_tier

  php_fpm:
    <<: *default_logging
    <<: *default_php
    image: ${IMAGE_PHP}:dev
    container_name: php_fpm

  php_cli:
    <<: *default_logging
    <<: *default_php
    image: ${IMAGE_PHP}:dev
    container_name: php_cli

  php_workspace:
    <<: *default_logging
    <<: *default_php
    image: ${IMAGE_PHP}:workspace
    container_name: php_workspace

  redis:
    image: redis:6-alpine
    container_name: redis
    hostname: $REDIS_HOST
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - backend_tier

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    hostname: $POSTGRES_HOST
    restart: always
    environment:
      - POSTGRES_DB
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_tier
