version: "3"

x-logging:
  &default_logging
  logging:
    driver: "json-file"

volumes:
  # for persistence between restarts
  postgres:
    name: postgres
    driver: local
  logs:
    name: logs
    driver: local
  cache:
    name: cache
    driver: local

networks:
  frontend_tier:
    driver: bridge
  backend_tier:
    driver: bridge

services:
  nginx:
    <<: *default_logging
    image: soprun/docker-project-nginx:latest
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        NGINX_VERSION: $NGINX_VERSION
    ports:
      - "127.0.0.1:${NGINX_HOST_HTTP_PORT}:80"
      - "127.0.0.1:${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      - frontend_tier
      - backend_tier

  php:
    <<: *default_logging
    image: soprun/docker-project:dev-latest
    container_name: php
    restart: unless-stopped
    tty: true
    privileged: true
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      target: dev
      args:
        PHP_VERSION: $PHP_VERSION
        PHP_APCU_VERSION: $PHP_APCU_VERSION
        PHP_REDIS_VERSION: $PHP_REDIS_VERSION
        PHP_XDEBUG_VERSION: $PHP_XDEBUG_VERSION
        PHP_OPCACHE_VERSION: $PHP_OPCACHE_VERSION
    volumes:
      - ./app:/app:rw,cached
      - cache:/app/var/cache:rw,cached
      - logs:/app/var/log:rw,cached
    networks:
      - backend_tier

#  postgres:
#    <<: *default_logging
#    image: "postgres:${POSTGRES_VERSION}"
#    container_name: postgres
#    hostname: "$POSTGRES_HOST"
#    restart: always
#    environment:
#      - POSTGRES_DB
#      - POSTGRES_USERNAME
#      - POSTGRES_PASSWORD
#    ports:
#      - "127.0.0.1:${POSTGRES_PORT}:5432"
#    volumes:
#      - postgres:/var/lib/postgresql/data
#    networks:
#      - backend_tier
#
#  redis:
#    <<: *default_logging
#    image: "redis:${REDIS_VERSION}"
#    container_name: redis
#    hostname: "$REDIS_HOST"
#    restart: always
#    ports:
#      - "127.0.0.1:${REDIS_PORT}:6379"
#    networks:
#      - backend_tier