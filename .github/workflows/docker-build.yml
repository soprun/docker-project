# https://www.docker.com/blog/docker-github-actions/
# https://github.com/metcalfc/docker-action-examples/tree/main/.github/workflows

name: Docker build image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - develop
    # paths:
    #   - '.github/**'
    #   - 'docker/**'
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # GITHUB_CONTEXT: ${{ toJson(github) }}

  IMAGE_PHP_NAME: soprun/docker-project-php
  IMAGE_PHP_FILE: ./docker/php/Dockerfile
  IMAGE_NGINX_NAME: soprun/docker-project-nginx
  IMAGE_NGINX_FILE: ./docker/nginx/Dockerfile

jobs:
  build:
    name: "Build image: ..."
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Setup build
        id: release
        run: |
          RELEASE_NAME=$(printf "release-%s\n" "$(date +'%Y-%m-%d')")
          echo "::set-output name=RELEASE_NAME::$RELEASE_NAME"


          DOCKER_IMAGE=${{ env.IMAGE_PHP_NAME }}
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # https://github.com/docker/build-push-action
      - name: "Build image: PHP"
        id: build_php_image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ env.IMAGE_PHP_FILE }}
          target: dev
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.prep.outputs.tags }}
          cache-to: type=inline

#      - name: Inspect
#        run: |
#          docker image inspect soprun/docker-project-php:latest
#
#      - name: Update repo description
#        uses: peter-evans/dockerhub-description@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: "Build image: Nginx (${{ matrix.target }})"
      #   id: build_nginx_image
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     builder: ${{ steps.buildx.outputs.name }}
      #     context: .
      #     file: ${{ env.IMAGE_NGINX_FILE }}
      #     target: ${{ matrix.target }}
      #     tags: ${{ steps.prep.outputs.IMAGE_NGINX_TAG }}

      - name: Image digest PHP
        run: echo ${{ steps.build_php_image.outputs.digest }}

      # - name: Image digest Nginx
      #   run: echo ${{ steps.build_nginx_image.outputs.digest }}