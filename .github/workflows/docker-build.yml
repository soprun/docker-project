# https://www.docker.com/blog/docker-github-actions/
# https://github.com/metcalfc/docker-action-examples/tree/main/.github/workflows

name: Docker build image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - develop
    # paths:
    #   - '.github/**'
    #   - 'docker/**'
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # GITHUB_CONTEXT: ${{ toJson(github) }}

  PHP_IMAGE_NAME: soprun/docker-project-php
  PHP_IMAGE_FILE: ./docker/php/Dockerfile

  NGINX_IMAGE_NAME: soprun/docker-project-nginx
  NGINX_IMAGE_FILE: ./docker/nginx/Dockerfile

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Setup build
        id: release
        run: |
          RELEASE_NAME=$(printf "release-%s\n" "$(date +'%Y-%m-%d')")
          echo "::set-output name=RELEASE_NAME::$RELEASE_NAME"

          RELEASE_DATE=$(date +'%Y-%m-%d')
          echo "::set-output name=RELEASE_DATE::$RELEASE_DATE"

          # Strip git ref prefix from version
          RELEASE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_TAG=$(echo $RELEASE_TAG | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$RELEASE_TAG" == "master" ] && RELEASE_TAG=latest

          echo "::set-output name=RELEASE_TAG::$RELEASE_TAG"
          # latest, develop, v1.1.2

      - name: Docker Login
        uses: docker/login-action@v1.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build PHP image (dev)
        id: build_php_dev
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: $PHP_IMAGE_FILE
          target: dev
          tags: "${PHP_IMAGE_NAME}:dev-${RELEASE_TAG}"

      - name: Build PHP image (prod)
        id: build_php_prod
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./docker/php/Dockerfile
          target: prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}