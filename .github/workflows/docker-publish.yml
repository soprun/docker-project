name: Docker CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - develop
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_CONTEXT: ${{ toJson(github) }}

  IMAGE_NAME: soprun/docker-project
  DOCKER_FILE: ./docker/php/Dockerfile

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  #  test:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - name: Run tests
  #        run: |
  #          if [ -f docker-compose.test.yml ]; then
  #            docker-compose --file docker-compose.test.yml build
  #            docker-compose --file docker-compose.test.yml run sut
  #          else
  #            docker build . --file $DOCKER_FILE
  #          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    name: Push image
    # needs:
    #   - test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Preparing build
        run: |
          # IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          BASE_BRANCH=$(echo "${{ github.base_ref }}")

          # echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_NAME=$IMAGE_NAME
          echo BASE_BRANCH=$BASE_BRANCH
          echo VERSION=$VERSION
          echo "======================================="
          echo "$GITHUB_CONTEXT"
          # echo ${{ github.event.pull_request.title }}

      - name: Build image
        run: |
          docker build . \
          --file $DOCKER_FILE \
          --tag "$IMAGE_NAME:$VERSION"
          --label project.version=$VERSION \
          --label project.branch="${{ github.base_ref }}" \
          --label project.commit_sha="${{ github.sha }}" \

      - name: Push image
        run: |
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION