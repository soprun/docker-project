# GitHub Action for Symfony
name: Testing Symfony

# Triggers the workflow on push or pull request events
# see: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#example-using-multiple-events-with-activity-types-or-configuration
on:
  push:
    paths-ignore:
      - 'docker/**'
      - 'docs/**'

  # Trigger the workflow on push or pull request,
  # but only for the main branch
  # pull_request:
  #   branches:
  #     - main

jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php-versions:
          - '7.3'
          - '7.4'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v2
        id: cache-db
        with:
          path: ~/.symfony/cache
          key: db
          lock: ./app/composer.lock

      - name: PHP Security Checker
        uses: symfonycorp/security-checker-action@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: xdebug #optional

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          cd ./app
          composer install --no-progress --prefer-dist --optimize-autoloader

      #      - name: Run Migration
      #        run: |
      #          composer require symfony/orm-pack
      #          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
      #          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
      #        env:
      #          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      - name: Run Tests
        run: php ./app/bin/phpunit --coverage-text