[global]
; Override default pid file
pid = /run/php-fpm.pid

; Avoid logs being sent to syslog
error_log = /proc/self/fd/2
log_level = notice

; Set this to php default's max_execution_time to allow children to stop gracefully when fpm is commanded to stop
; This helps avoiding 502's
process_control_timeout = 30

; Do not daemonize (eg send process to the background)
daemonize = no

[www]
user = www-data
group = www-data
chdir = /app

; Access from webserver container is via network, not socket file
listen = [::]:9000
listen.mode=0660

; Redirect logs to stdout - FPM closes /dev/std* on startup
; if we send this to /proc/self/fd/1, it never appears
access.log = /proc/self/fd/1
access.format = '{"time_local":"%{%Y-%m-%dT%H:%M:%S%z}T","client_ip":"%{HTTP_X_FORWARDED_FOR}e","remote_addr":"%R","remote_user":"%u","request":"%m %{REQUEST_URI}e %{SERVER_PROTOCOL}e","status":"%s","body_bytes_sent":"%l","request_time":"%d","http_referrer":"%{HTTP_REFERER}e","http_user_agent":"%{HTTP_USER_AGENT}e","request_id":"%{HTTP_X_REQUEST_ID}e"}'

; Required to allow config-by-environment
clear_env = no

; see: https://symfony.com/blog/logging-in-symfony-and-the-cloud
catch_workers_output = yes
decorate_workers_output = no

; The timeout for serving a single request after which the worker process will be killed.
; This option should be used when the 'max_execution_time' ini option does not stop script
; execution for some reason.
request_terminate_timeout = 120s

pm = dynamic
pm.max_children = 10
pm.start_servers = 5
pm.min_spare_servers = 1
pm.max_spare_servers = 5
pm.process_idle_timeout = 10s
pm.status_path = /status

ping.path = /ping
