#!/bin/bash

set -e

# see: https://github.com/dunglas/symfony-docker
# see: https://github.com/bitnami/bitnami-docker-symfony

# Project directory
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
export PROJECT_DIR

### Loading dependency files
files=(
  # Shell tools
  # shellcheck source=./docker/common
  "${PROJECT_DIR}/docker/common"

  # Project environment variables
  # shellcheck source=./.env
  # "${PROJECT_DIR}/.env"
  # "${PROJECT_DIR}/.env.local"

  # Application environment variables
  # shellcheck source=./app/.env
  "${PROJECT_DIR}/app/.env"
  "${PROJECT_DIR}/app/.env.local"
)

## Load the shell and .env files
for file in "${files[@]}"; do
  # shellcheck source=
  [ -r "$file" ] && [ -f "$file" ] && source "$file"
done
unset file

###
### Building images
###

# Be very strict
# set -euox pipefail

#version=$(git describe --tags --abbrev=0)
version=$(git rev-parse --abbrev-ref HEAD)

docker build \
  --rm \
  --force-rm \
  --file "${PROJECT_DIR}/docker/php/Dockerfile.composer" \
  --tag "${IMAGE_PHP}:composer" \
  --target "composer" \
  .

docker build \
  --rm \
  --force-rm \
  --file "${PROJECT_DIR}/docker/php/Dockerfile" \
  --tag "${IMAGE_PHP}:base" \
  --target "base" \
  --label "project.name=${PROJECT_NAME}" \
  --label "project.version=$(git describe --tags --abbrev=0)" \
  --label "project.branch=$(git rev-parse --abbrev-ref HEAD)" \
  --label "project.commit_sha=$(git rev-parse HEAD)" \
  --label "project.commit_id=$(git rev-parse --short=7 HEAD)" \
  .

docker build \
  --rm \
  --force-rm \
  --file "${PROJECT_DIR}/docker/php/Dockerfile.dev" \
  --tag "${IMAGE_PHP}:${version}-dev" \
  --target "dev" \
  .

docker build \
  --rm \
  --force-rm \
  --file "${PROJECT_DIR}/docker/php/Dockerfile.prod" \
  --tag "${IMAGE_PHP}:latest" \
  --tag "${IMAGE_PHP}:${version}-prod" \
  --target "prod" \
  .

docker build \
  --rm \
  --force-rm \
  --file "${PROJECT_DIR}/docker/php/Dockerfile.workspace" \
  --tag "${IMAGE_PHP}:${version}-workspace" \
  --target "workspace" \
  .

#docker push "${IMAGE_PHP}:latest"
#docker push "${IMAGE_PHP}:prod"
#docker push "${IMAGE_PHP}:stag"

#docker push "${IMAGE_PHP}:dev"
#docker push "${IMAGE_PHP}:test"
#docker push "${IMAGE_PHP}:base"
#docker push "${IMAGE_PHP}:workspace"

#docker push "${IMAGE_PHP_FPM}"
#docker push "${IMAGE_PHP_CLI}"
#docker push "${IMAGE_PHP_WORKSPACE}"

# see: https://cloud.google.com/artifact-registry/docs/docker/names

#tag_dev="dev"
#tag_test="test"
#tag_stag="stag"
#tag_prod="prod"

# dev > stag > prod
# $PROJECT_ID/SERVICE-NAME:$COMMIT_SHA

# https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values
# https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values#using_user-defined_substitutions
#[PROJECT_ID]/[IMAGE]:[TAG]

#[PROJECT_ID] is your project ID.
#[IMAGE] is the name of the image you want to pull from Docker Hub.
#[TAG] is the name of the tag associated with the image you would like to pull, if it exists.
